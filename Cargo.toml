[package]
name = "promptbox"
version = "0.1.0"
edition = "2021"
resolver = "2"
authors = ["Daniel Imfeld <dimfeld>"]
description = "A CLI tool for managing and executing LLM prompt templates"
readme = "README.md"
repository = "https://github.com/dimfeld/promptbox"
license = "MIT OR Apache-2.0"
categories = ["command-line-utilities", "template-engine"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
clap = { version = "4.4.7", features = ["derive", "env", "string"] }
dirs = "5.0.1"
dotenvy = "0.15.7"
error-stack = "0.4.1"
flume = "0.11.0"
itertools = "0.11.0"
liquid = "0.26.4"
regex = "1.10.2"
rusqlite = { version = "0.29.0", features = ["bundled", "modern-full"] }
rusqlite_migration = "1.0.2"
serde = { version = "1.0.190", features = ["derive"] }
serde_json = "1.0.108"
thiserror = "1.0.50"
tokenizers = { version = "0.15.0", features = [ "http" ] }
toml = "0.8.6"
ureq = { version = "2.8.0", features = ["serde_json", "json"] }

[features]
default = []
# Enable tests that require a running ollama instance with specific models pulled.
test-ollama = []

[profile.release]
debug = 1

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.5.0"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "dimfeld/homebrew-tap"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-pc-windows-msvc"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Publish jobs to run in CI
pr-run-mode = "plan"
